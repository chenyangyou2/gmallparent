<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace : 接口全路径-->
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">

<!--
    id： 表示唯一性
    type:   表示这个返回结果集的数据类型：
    autoMapping ： 表示自动映射 数据库表的字段！
-->
    <resultMap id="BaseAttrInfoMap" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
    <!--
        id:表示主键 这条数据唯一性
            property:表示实体类的属性名
            column:表示通过sql 语句执行后 显示的字段名！
        result:表示普通字段
    -->
        <id property="id" column="id"></id>
        <!-- <result property="attrName" column="attr_name"></result>-->
        
    <!--        
        mybatis 如何配置一对多
        property:表示实体的属性名
        ofType：表示n的数据类型
    -->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
            <!--实体类属性id 重复性没关系，但是数据库的字段名属性重就不行！ 如果有重复需要使用别名-->
            <id property="id" column="attr_value_id"></id>
        </collection>

    </resultMap>

<!--
    id：表示方法的名称
    resultMap：表示返回结果集映射  可以自定义  多表关联的时候，或者根据业务需要自定义一些字段的时候
    resultType: 表示方法执行之后返回的具体类型！
-->
    <select id="selectAttrInfoList" resultMap="BaseAttrInfoMap">
        select
        bai.id,
        bai.attr_name,
        bai.category_id,
        bai.category_level,
        bav.id attr_value_id,
        bav.value_name
        from base_attr_info bai
        inner join base_attr_value bav on bai.id = bav.attr_id
        <where>
            <if test="category1Id != null and category1Id !=0">
                or (bai.category_id = #{category1Id} and bai.category_level=1)
            </if>
            <if test="category2Id != null and category2Id !=0">
                or (bai.category_id = #{category2Id} and bai.category_level=2)
            </if>
            <if test="category3Id != null and category3Id !=0">
                or (bai.category_id = #{category3Id} and bai.category_level=3)
            </if>
        </where>
        and bai.is_deleted = 0
        and bav.is_deleted = 0
        order by bai.id, bai.category_level
    </select>

    <!--    根据spuId,skuId 获取销售属性+销售属性值+锁定-->
    <select id="selectBaseAttrInfoList" resultMap="BaseAttrInfoMap">
        select
    bai.id,
       bai.attr_name,
       bai.category_id,
       bai.category_level,
       bav.id attr_value_id,
       bav.value_name
 from base_attr_info bai
    inner join base_attr_value bav on bai.id = bav.attr_id
    inner join sku_attr_value sav on sav.value_id = bav.id and sav.sku_id = 24
    </select>
</mapper>
























